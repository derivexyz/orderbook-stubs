/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Liquidates a given subaccount using funds from another subaccount. This endpoint has a few limitations:<br />1. If succesful, the RPC will freeze the caller's subaccount until the bid is settled or is reverted on chain.<br />2. The caller's subaccount must not have any open orders.<br />3. The caller's subaccount must have enough withdrawable cash to cover the bid and the buffer margin requirements.
 * Required minimum session key permission level is `admin`
 */
export type PrivateLiquidate = PrivateLiquidateJSONRPCSchema;
export type HttpMethod = "POST";
export type Method = "private/liquidate";
/**
 * Amount of cash to transfer to a newly created subaccount for bidding. Must be non-negative.
 */
export type CashTransfer = string;
/**
 * Last seen trade ID for account being liquidated. Not checked if set to 0.
 */
export type LastSeenTradeId = number;
/**
 * Subaccount ID of the account to be liquidated.
 */
export type LiquidatedSubaccountId = number;
/**
 * Unique nonce defined as <UTC_timestamp in ms><random_number_up_to_6_digits> (e.g. 1695836058725001, where 001 is the random number)
 */
export type Nonce = number;
/**
 * Percent of the liquidated position to bid for. Will bid for the maximum possible percent of the position if set to 1
 */
export type PercentBid = string;
/**
 * Maximum amount of cash to be paid from bidder to liquidated account (supports negative amounts for insolvent auctions). Not checked if set to 0.
 */
export type PriceLimit = string;
/**
 * Ethereum signature of the order
 */
export type Signature = string;
/**
 * Unix timestamp in seconds. Order signature becomes invalid after this time, and the system will cancel the order.Expiry MUST be at least 5 min from now.
 */
export type SignatureExpirySec = number;
/**
 * Owner wallet address or registered session key that signed order
 */
export type Signer = string;
/**
 * Subaccount ID owned by wallet, that will be doing the bidding.
 */
export type SubaccountId = number;
/**
 * Estimated bid price for this liquidation
 */
export type EstimatedBidPrice = string;
/**
 * Estimated profit (increase in the subaccount mark value) if the liquidation is successful.
 */
export type EstimatedDiscountPnl = string;
/**
 * Estimated percent of account the bid will aquire
 */
export type EstimatedPercentBid = string;
/**
 * The transaction id of the related settlement transaction
 */
export type TransactionId = string;

export interface PrivateLiquidateJSONRPCSchema {
  request: PrivateLiquidateRequestSchema;
  response: PrivateLiquidateResponseSchema;
}
export interface PrivateLiquidateRequestSchema {
  httpMethod: HttpMethod;
  id?: string | number;
  method: Method;
  params: PrivateLiquidateParamsSchema;
}
export interface PrivateLiquidateParamsSchema {
  cash_transfer: CashTransfer;
  last_seen_trade_id: LastSeenTradeId;
  liquidated_subaccount_id: LiquidatedSubaccountId;
  nonce: Nonce;
  percent_bid: PercentBid;
  price_limit: PriceLimit;
  signature: Signature;
  signature_expiry_sec: SignatureExpirySec;
  signer: Signer;
  subaccount_id: SubaccountId;
}
export interface PrivateLiquidateResponseSchema {
  id: string | number;
  result: PrivateLiquidateResultSchema;
}
export interface PrivateLiquidateResultSchema {
  estimated_bid_price: EstimatedBidPrice;
  estimated_discount_pnl: EstimatedDiscountPnl;
  estimated_percent_bid: EstimatedPercentBid;
  transaction_id: TransactionId;
}
