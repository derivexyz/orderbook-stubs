/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Get expired option settlement history for a subaccount
 */
export type PublicGetOptionSettlementHistory = PublicGetOptionSettlementHistoryJSONRPCSchema;
export type HttpMethod = "GET";
export type Method = "public/get_option_settlement_history";
/**
 * Page number of results to return (default 1, returns last if above `num_pages`)
 */
export type Page = number;
/**
 * Number of results per page (default 100, max 1000)
 */
export type PageSize = number;
/**
 * Subaccount ID filter (defaults to all if not provided)
 */
export type SubaccountId = number | null;
/**
 * Total number of items, across all pages
 */
export type Count = number;
/**
 * Number of pages
 */
export type NumPages = number;
/**
 * Amount that was settled
 */
export type Amount = string;
/**
 * Expiry timestamp of the option
 */
export type Expiry = number;
/**
 * Instrument name
 */
export type InstrumentName = string;
/**
 * USD profit or loss from option settlements calculated as: settlement value - (average cost including fees x amount)
 */
export type OptionSettlementPnl = string;
/**
 * USD profit or loss from option settlements calculated as: settlement value - (average price excluding fees x amount)
 */
export type OptionSettlementPnlExclFees = string;
/**
 * Price of option settlement
 */
export type SettlementPrice = string;
/**
 * Subaccount ID of the settlement event
 */
export type SubaccountId1 = number;
/**
 * List of expired option settlements
 */
export type Settlements = OptionSettlementResponseSchema[];

export interface PublicGetOptionSettlementHistoryJSONRPCSchema {
  request: PublicGetOptionSettlementHistoryRequestSchema;
  response: PublicGetOptionSettlementHistoryResponseSchema;
}
export interface PublicGetOptionSettlementHistoryRequestSchema {
  httpMethod: HttpMethod;
  id?: string | number;
  method: Method;
  params: PublicGetOptionSettlementHistoryParamsSchema;
}
export interface PublicGetOptionSettlementHistoryParamsSchema {
  page?: Page;
  page_size?: PageSize;
  subaccount_id?: SubaccountId;
}
export interface PublicGetOptionSettlementHistoryResponseSchema {
  id: string | number;
  result: PublicGetOptionSettlementHistoryResultSchema;
}
export interface PublicGetOptionSettlementHistoryResultSchema {
  pagination: PaginationInfoSchema;
  settlements: Settlements;
}
/**
 * Pagination info
 */
export interface PaginationInfoSchema {
  count: Count;
  num_pages: NumPages;
}
export interface OptionSettlementResponseSchema {
  amount: Amount;
  expiry: Expiry;
  instrument_name: InstrumentName;
  option_settlement_pnl: OptionSettlementPnl;
  option_settlement_pnl_excl_fees: OptionSettlementPnlExclFees;
  settlement_price: SettlementPrice;
  subaccount_id: SubaccountId1;
}
