/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Get top 250 users based on points earned. Can paginate where each page contains exactly 250 users.
 */
export type PublicGetPointsLeaderboard = PublicGetPointsLeaderboardJSONRPCSchema;
export type HttpMethod = "GET";
export type Method = "public/get_points_leaderboard";
/**
 * Page number of leaderboard. Each page holds up to 500 users and starts at 1.
 */
export type Page = number;
/**
 * Program for which to count leaderboard
 */
export type Program = string;
/**
 * Flag user for special treatment
 */
export type Flag = string;
/**
 * Wallet address of referrer
 */
export type Parent = string;
/**
 * Percentage of total points earned by user
 */
export type PercentShareOfPoints = string;
/**
 * Total points for the user
 */
export type Points = string;
/**
 * Leaderboard rank of the user
 */
export type Rank = number;
/**
 * Deprecated
 */
export type TotalVolume = string;
/**
 * Wallet address of the user
 */
export type Wallet = string;
/**
 * List of up to 500 users in order of highest points
 */
export type Leaderboard = LeaderboardWalletSchema[];
/**
 * Total number of pages in the leaderboard
 */
export type Pages = number;
/**
 * Total number of users in the program
 */
export type TotalUsers = number;

export interface PublicGetPointsLeaderboardJSONRPCSchema {
  request: PublicGetPointsLeaderboardRequestSchema;
  response: PublicGetPointsLeaderboardResponseSchema;
}
export interface PublicGetPointsLeaderboardRequestSchema {
  httpMethod: HttpMethod;
  id?: string | number;
  method: Method;
  params: PublicGetPointsLeaderboardParamsSchema;
}
export interface PublicGetPointsLeaderboardParamsSchema {
  page: Page;
  program: Program;
}
export interface PublicGetPointsLeaderboardResponseSchema {
  id: string | number;
  result: PublicGetPointsLeaderboardResultSchema;
}
export interface PublicGetPointsLeaderboardResultSchema {
  leaderboard: Leaderboard;
  pages: Pages;
  total_users: TotalUsers;
}
export interface LeaderboardWalletSchema {
  flag: Flag;
  parent: Parent;
  percent_share_of_points: PercentShareOfPoints;
  points: Points;
  rank: Rank;
  total_volume: TotalVolume;
  wallet: Wallet;
}
