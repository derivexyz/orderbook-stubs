/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Gets all the latest vault shareRate, totalSupply and TVL values for all vaults.<br /><br />For data on shares across chains, use public/get_vault_assets.
 */
export type PublicGetVaultStatistics = PublicGetVaultStatisticsJSONRPCSchema;
export type HttpMethod = "GET";
export type Method = "public/get_vault_statistics";
/**
 * The value of the vault's token against the base currency. Ex: rswETHC vs rswETH
 */
export type BaseValue = string;
/**
 * The Derive chain block number
 */
export type BlockNumber = number;
/**
 * Timestamp of the Derive chain block number
 */
export type BlockTimestamp = number;
/**
 * Will return None before vault creates subaccount or if no trades found.
 */
export type SubaccountValueAtLastTrade = string | null;
/**
 * Total supply of the vault's token on Derive chain
 */
export type TotalSupply = string;
/**
 * The value of the vault's token against the underlying currency. Ex: rswETHC vs ETH
 */
export type UnderlyingValue = string | null;
/**
 * Total USD TVL of the vault
 */
export type UsdTvl = string;
/**
 * The value of the vault's token against USD
 */
export type UsdValue = string;
/**
 * Name of the vault
 */
export type VaultName = string;
export type Result = VaultStatisticsResponseSchema[];

export interface PublicGetVaultStatisticsJSONRPCSchema {
  request: PublicGetVaultStatisticsRequestSchema;
  response: PublicGetVaultStatisticsResponseSchema;
}
export interface PublicGetVaultStatisticsRequestSchema {
  httpMethod: HttpMethod;
  id?: string | number;
  method: Method;
  params: PublicGetVaultStatisticsParamsSchema;
}
export interface PublicGetVaultStatisticsParamsSchema {}
export interface PublicGetVaultStatisticsResponseSchema {
  id: string | number;
  result: Result;
}
export interface VaultStatisticsResponseSchema {
  base_value: BaseValue;
  block_number: BlockNumber;
  block_timestamp: BlockTimestamp;
  subaccount_value_at_last_trade: SubaccountValueAtLastTrade;
  total_supply: TotalSupply;
  underlying_value: UnderlyingValue;
  usd_tvl: UsdTvl;
  usd_value: UsdValue;
  vault_name: VaultName;
}
