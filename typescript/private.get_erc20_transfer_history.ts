/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Get subaccount erc20 transfer history.<br /><br />Position transfers (e.g. options or perps) are treated as trades. Use `private/get_trade_history` for position transfer history.
 * Required minimum session key permission level is `read_only`
 */
export type PrivateGetErc20TransferHistory = PrivateGetErc20TransferHistoryJSONRPCSchema;
export type HttpMethod = "POST";
export type Method = "private/get_erc20_transfer_history";
/**
 * End timestamp of the event history (default current time)
 */
export type EndTimestamp = number;
/**
 * Start timestamp of the event history (default 0)
 */
export type StartTimestamp = number;
/**
 * Subaccount id
 */
export type SubaccountId = number;
/**
 * Amount withdrawn by the subaccount
 */
export type Amount = string;
/**
 * Asset withdrawn
 */
export type Asset = string;
/**
 * Recipient or sender subaccount_id of transfer
 */
export type CounterpartySubaccountId = number;
/**
 * True if the transfer was initiated by the subaccount, False otherwise
 */
export type IsOutgoing = boolean;
/**
 * Timestamp of the transfer (in ms since UNIX epoch)
 */
export type Timestamp = number;
/**
 * Hash of the transaction that withdrew the funds
 */
export type TxHash = string;
/**
 * List of erc20 transfers
 */
export type Events = ERC20TransferSchema[];

export interface PrivateGetErc20TransferHistoryJSONRPCSchema {
  request: PrivateGetErc20TransferHistoryRequestSchema;
  response: PrivateGetErc20TransferHistoryResponseSchema;
}
export interface PrivateGetErc20TransferHistoryRequestSchema {
  httpMethod: HttpMethod;
  id?: string | number;
  method: Method;
  params: PrivateGetErc20TransferHistoryParamsSchema;
}
export interface PrivateGetErc20TransferHistoryParamsSchema {
  end_timestamp?: EndTimestamp;
  start_timestamp?: StartTimestamp;
  subaccount_id: SubaccountId;
}
export interface PrivateGetErc20TransferHistoryResponseSchema {
  id: string | number;
  result: PrivateGetErc20TransferHistoryResultSchema;
}
export interface PrivateGetErc20TransferHistoryResultSchema {
  events: Events;
}
export interface ERC20TransferSchema {
  amount: Amount;
  asset: Asset;
  counterparty_subaccount_id: CounterpartySubaccountId;
  is_outgoing: IsOutgoing;
  timestamp: Timestamp;
  tx_hash: TxHash;
}
