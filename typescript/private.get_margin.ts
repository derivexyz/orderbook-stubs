/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Calculates margin for a given subaccount and (optionally) a simulated state change. Does not take into account<br />open orders margin requirements.
 * Required minimum session key permission level is `read_only`
 */
export type PrivateGetMargin = PrivateGetMarginJSONRPCSchema;
export type HttpMethod = "POST";
export type Method = "private/get_margin";
/**
 * Optional, add collaterals to simulate deposits / withdrawals / spot trades
 */
export type SimulatedCollateralChanges = SimulatedCollateralSchema[] | null;
/**
 * Collateral amount to simulate
 */
export type Amount = string;
/**
 * Collateral ERC20 asset name (e.g. ETH, USDC, WSTETH)
 */
export type AssetName = string;
/**
 * Optional, add positions to simulate perp / option trades
 */
export type SimulatedPositionChanges = SimulatedPositionSchema[] | null;
/**
 * Position amount to simulate
 */
export type Amount1 = string;
/**
 * Only for perps. Entry price to use in the simulation. Mark price is used if not provided.
 */
export type EntryPrice = string | null;
/**
 * Instrument name
 */
export type InstrumentName = string;
/**
 * Subaccount_id
 */
export type SubaccountId = number;
/**
 * True if trade passes margin requirement
 */
export type IsValidTrade = boolean;
/**
 * Initial margin requirement post trade
 */
export type PostInitialMargin = string;
/**
 * Maintenance margin requirement post trade
 */
export type PostMaintenanceMargin = string;
/**
 * Initial margin requirement before trade
 */
export type PreInitialMargin = string;
/**
 * Maintenance margin requirement before trade
 */
export type PreMaintenanceMargin = string;
/**
 * Subaccount_id
 */
export type SubaccountId1 = number;

export interface PrivateGetMarginJSONRPCSchema {
  request: PrivateGetMarginRequestSchema;
  response: PrivateGetMarginResponseSchema;
}
export interface PrivateGetMarginRequestSchema {
  httpMethod: HttpMethod;
  id?: string | number;
  method: Method;
  params: PrivateGetMarginParamsSchema;
}
export interface PrivateGetMarginParamsSchema {
  simulated_collateral_changes?: SimulatedCollateralChanges;
  simulated_position_changes?: SimulatedPositionChanges;
  subaccount_id: SubaccountId;
}
export interface SimulatedCollateralSchema {
  amount: Amount;
  asset_name: AssetName;
}
export interface SimulatedPositionSchema {
  amount: Amount1;
  entry_price?: EntryPrice;
  instrument_name: InstrumentName;
}
export interface PrivateGetMarginResponseSchema {
  id: string | number;
  result: PrivateGetMarginResultSchema;
}
export interface PrivateGetMarginResultSchema {
  is_valid_trade: IsValidTrade;
  post_initial_margin: PostInitialMargin;
  post_maintenance_margin: PostMaintenanceMargin;
  pre_initial_margin: PreInitialMargin;
  pre_maintenance_margin: PreMaintenanceMargin;
  subaccount_id: SubaccountId1;
}
