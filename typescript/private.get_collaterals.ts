/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Get collaterals of a subaccount
 * Required minimum session key permission level is `read_only`
 */
export type PrivateGetCollaterals = PrivateGetCollateralsJSONRPCSchema;
export type HttpMethod = "POST";
export type Method = "private/get_collaterals";
/**
 * Subaccount_id
 */
export type SubaccountId = number;
/**
 * Asset amount of given collateral
 */
export type Amount = string;
/**
 * Asset name
 */
export type AssetName = string;
/**
 * Type of asset collateral (currently always `erc20`)
 */
export type AssetType = "erc20" | "option" | "perp";
/**
 * Average price of the collateral, 0 for USDC.
 */
export type AveragePrice = string;
/**
 * Average price of whole position excluding fees
 */
export type AveragePriceExclFees = string;
/**
 * Timestamp of when the position was opened (in ms since Unix epoch)
 */
export type CreationTimestamp = number;
/**
 * Cumulative interest earned on supplying collateral or paid for borrowing
 */
export type CumulativeInterest = string;
/**
 * Underlying currency of asset (`ETH`, `BTC`, etc)
 */
export type Currency = string;
/**
 * USD value of collateral that contributes to initial margin
 */
export type InitialMargin = string;
/**
 * USD value of collateral that contributes to maintenance margin
 */
export type MaintenanceMargin = string;
/**
 * Current mark price of the asset
 */
export type MarkPrice = string;
/**
 * USD value of the collateral (amount * mark price)
 */
export type MarkValue = string;
/**
 * USD margin requirement for all open orders for this asset / instrument
 */
export type OpenOrdersMargin = string;
/**
 * Portion of interest that has not yet been settled on-chain. This number is added to the portfolio value for margin calculations purposes.
 */
export type PendingInterest = string;
/**
 * Realized trading profit or loss of the collateral, 0 for USDC.
 */
export type RealizedPnl = string;
/**
 * Realized trading profit or loss of the position excluding fees
 */
export type RealizedPnlExclFees = string;
/**
 * Total fees paid for opening and changing the position
 */
export type TotalFees = string;
/**
 * Unrealized trading profit or loss of the collateral, 0 for USDC.
 */
export type UnrealizedPnl = string;
/**
 * Unrealized trading profit or loss of the position excluding fees
 */
export type UnrealizedPnlExclFees = string;
/**
 * All collaterals that count towards margin of subaccount
 */
export type Collaterals = CollateralResponseSchema[];
/**
 * Subaccount_id
 */
export type SubaccountId1 = number;

export interface PrivateGetCollateralsJSONRPCSchema {
  request: PrivateGetCollateralsRequestSchema;
  response: PrivateGetCollateralsResponseSchema;
}
export interface PrivateGetCollateralsRequestSchema {
  httpMethod: HttpMethod;
  id?: string | number;
  method: Method;
  params: PrivateGetCollateralsParamsSchema;
}
export interface PrivateGetCollateralsParamsSchema {
  subaccount_id: SubaccountId;
}
export interface PrivateGetCollateralsResponseSchema {
  id: string | number;
  result: PrivateGetCollateralsResultSchema;
}
export interface PrivateGetCollateralsResultSchema {
  collaterals: Collaterals;
  subaccount_id: SubaccountId1;
}
export interface CollateralResponseSchema {
  amount: Amount;
  asset_name: AssetName;
  asset_type: AssetType;
  average_price: AveragePrice;
  average_price_excl_fees: AveragePriceExclFees;
  creation_timestamp: CreationTimestamp;
  cumulative_interest: CumulativeInterest;
  currency: Currency;
  initial_margin: InitialMargin;
  maintenance_margin: MaintenanceMargin;
  mark_price: MarkPrice;
  mark_value: MarkValue;
  open_orders_margin: OpenOrdersMargin;
  pending_interest: PendingInterest;
  realized_pnl: RealizedPnl;
  realized_pnl_excl_fees: RealizedPnlExclFees;
  total_fees: TotalFees;
  unrealized_pnl: UnrealizedPnl;
  unrealized_pnl_excl_fees: UnrealizedPnlExclFees;
}
