/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Get spot feed history candles by currency<br /><br />DB: read replica
 */
export type PublicGetSpotFeedHistoryCandles = PublicGetSpotFeedHistoryCandlesJSONRPCSchema;
export type HttpMethod = "GET";
export type Method = "public/get_spot_feed_history_candles";
/**
 * Currency
 */
export type Currency = string;
/**
 * End timestamp
 */
export type EndTimestamp = number;
/**
 * Period
 */
export type Period = 900 | 3600 | 14400 | 28800 | 86400 | 604800;
/**
 * Start timestamp
 */
export type StartTimestamp = number;
/**
 * Currency
 */
export type Currency1 = string;
/**
 * Close price
 */
export type ClosePrice = string;
/**
 * High price
 */
export type HighPrice = string;
/**
 * Low price
 */
export type LowPrice = string;
/**
 * Open price
 */
export type OpenPrice = string;
/**
 * Spot price
 */
export type Price = string;
/**
 * Timestamp of when the spot price was recored into the database
 */
export type Timestamp = number;
/**
 * Timestamp bucket; this value is regularly spaced out with `period` seconds between data points, missing values are forward-filled from earlier data where possible, if no earlier data is available, values are back-filled from the first observed data point
 */
export type TimestampBucket = number;
/**
 * Spot feed history candles
 */
export type SpotFeedHistory = SpotFeedHistoryCandlesResponseSchema[];

export interface PublicGetSpotFeedHistoryCandlesJSONRPCSchema {
  request: PublicGetSpotFeedHistoryCandlesRequestSchema;
  response: PublicGetSpotFeedHistoryCandlesResponseSchema;
}
export interface PublicGetSpotFeedHistoryCandlesRequestSchema {
  httpMethod: HttpMethod;
  id?: string | number;
  method: Method;
  params: PublicGetSpotFeedHistoryCandlesParamsSchema;
}
export interface PublicGetSpotFeedHistoryCandlesParamsSchema {
  currency: Currency;
  end_timestamp: EndTimestamp;
  period: Period;
  start_timestamp: StartTimestamp;
}
export interface PublicGetSpotFeedHistoryCandlesResponseSchema {
  id: string | number;
  result: PublicGetSpotFeedHistoryCandlesResultSchema;
}
export interface PublicGetSpotFeedHistoryCandlesResultSchema {
  currency: Currency1;
  spot_feed_history: SpotFeedHistory;
}
export interface SpotFeedHistoryCandlesResponseSchema {
  close_price: ClosePrice;
  high_price: HighPrice;
  low_price: LowPrice;
  open_price: OpenPrice;
  price: Price;
  timestamp: Timestamp;
  timestamp_bucket: TimestampBucket;
}
