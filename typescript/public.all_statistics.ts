/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Get statistics for all instruments broken down by currency and type
 */
export type PublicAllStatistics = PublicAllStatisticsJSONRPCSchema;
export type HttpMethod = "GET";
export type Method = "public/all_statistics";
/**
 * End time for statistics in ms
 */
export type EndTime = number | null;
/**
 * Currency of the instrument
 */
export type Currency = string;
/**
 * 24h Fees
 */
export type DailyFees = string;
/**
 * 24h Notional volume
 */
export type DailyNotionalVolume = string;
/**
 * 24h Premium volume
 */
export type DailyPremiumVolume = string;
/**
 * 24h Trades
 */
export type DailyTrades = number;
/**
 * Type of the instrument (OPTION, PERP, SPOT)
 */
export type InstrumentType = string;
/**
 * Open interest
 */
export type OpenInterest = string;
/**
 * Total fees
 */
export type TotalFees = string;
/**
 * Total notional volume
 */
export type TotalNotionalVolume = string;
/**
 * Total premium volume
 */
export type TotalPremiumVolume = string;
/**
 * Total trades
 */
export type TotalTrades = number;
export type Result = AllInstrumentStatisticsSchema[];

export interface PublicAllStatisticsJSONRPCSchema {
  request: PublicAllStatisticsRequestSchema;
  response: PublicAllStatisticsResponseSchema;
}
export interface PublicAllStatisticsRequestSchema {
  httpMethod: HttpMethod;
  id?: string | number;
  method: Method;
  params: PublicAllStatisticsParamsSchema;
}
export interface PublicAllStatisticsParamsSchema {
  end_time?: EndTime;
}
export interface PublicAllStatisticsResponseSchema {
  id: string | number;
  result: Result;
}
export interface AllInstrumentStatisticsSchema {
  currency: Currency;
  daily_fees: DailyFees;
  daily_notional_volume: DailyNotionalVolume;
  daily_premium_volume: DailyPremiumVolume;
  daily_trades: DailyTrades;
  instrument_type: InstrumentType;
  open_interest: OpenInterest;
  total_fees: TotalFees;
  total_notional_volume: TotalNotionalVolume;
  total_premium_volume: TotalPremiumVolume;
  total_trades: TotalTrades;
}
