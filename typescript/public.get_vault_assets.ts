/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Returns all vault assets tracked by orderbook.
 */
export type PublicGetVaultAssets = PublicGetVaultAssetsJSONRPCSchema;
export type HttpMethod = "POST";
export type Method = "public/get_vault_assets";
/**
 * DB ID of the newly created asset
 */
export type AssetId = string;
/**
 * Number of decimals of the on-chain ERC20 token
 */
export type ChainId = number;
/**
 * Address of the ERC20 which tracks transfer events and balances
 */
export type Erc20Address = string;
/**
 * Integrator token to track points for
 */
export type Integrator = string;
/**
 * Name of Vault ERC20 asset to track
 */
export type Name = string;
/**
 * RPC URL of the chain to track the asset on
 */
export type RpcUrl = string;
export type Result = InternalCreateVaultErc20AssetResultSchema[];

export interface PublicGetVaultAssetsJSONRPCSchema {
  request: PublicGetVaultAssetsRequestSchema;
  response: PublicGetVaultAssetsResponseSchema;
}
export interface PublicGetVaultAssetsRequestSchema {
  httpMethod: HttpMethod;
  id?: string | number;
  method: Method;
  params: PublicGetVaultAssetsParamsSchema;
}
export interface PublicGetVaultAssetsParamsSchema {}
export interface PublicGetVaultAssetsResponseSchema {
  id: string | number;
  result: Result;
}
export interface InternalCreateVaultErc20AssetResultSchema {
  asset_id: AssetId;
  chain_id: ChainId;
  erc20_address: Erc20Address;
  integrator: Integrator;
  name: Name;
  rpc_url: RpcUrl;
}
