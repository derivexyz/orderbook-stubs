/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Get currency related risk params, spot price 24hrs ago and lending details for a specific currency.
 */
export type PublicGetCurrency = PublicGetCurrencyJSONRPCSchema;
export type HttpMethod = "GET";
export type Method = "public/get_currency";
/**
 * Underlying currency of asset (`ETH`, `BTC`, etc)
 */
export type Currency = string;
export type AssetCapAndSupplyPerManager1 = string;
/**
 * Borrow APY (only for USDC)
 */
export type BorrowApy = string;
/**
 * Underlying currency of asset (`ETH`, `BTC`, etc)
 */
export type Currency1 = string;
/**
 * Market type of the currency
 */
export type MarketType = "ALL" | "SRM_BASE_ONLY" | "SRM_OPTION_ONLY" | "SRM_PERP_ONLY" | "CASH";
/**
 * Spot price of the currency
 */
export type SpotPrice = string;
/**
 * Spot price of the currency 24 hours ago
 */
export type SpotPrice_24H = string | null;
/**
 * Initial Margin discount for given collateral in Standard Manager (e.g. LTV). Only the Standard Manager supports non-USDC collateral
 */
export type SrmImDiscount = string;
/**
 * Maintenance Margin discount for given collateral in Standard Manager (e.g. liquidation threshold). Only the Standard Manager supports non-USDC collateral
 */
export type SrmMmDiscount = string;
/**
 * Supply APY (only for USDC)
 */
export type SupplyApy = string;
/**
 * Total collateral borrowed in the protocol (only USDC is borrowable)
 */
export type TotalBorrow = string;
/**
 * Total collateral supplied in the protocol
 */
export type TotalSupply = string;

export interface PublicGetCurrencyJSONRPCSchema {
  request: PublicGetCurrencyRequestSchema;
  response: PublicGetCurrencyResponseSchema;
}
export interface PublicGetCurrencyRequestSchema {
  httpMethod: HttpMethod;
  id?: string | number;
  method: Method;
  params: PublicGetCurrencyParamsSchema;
}
export interface PublicGetCurrencyParamsSchema {
  currency: Currency;
}
export interface PublicGetCurrencyResponseSchema {
  id: string | number;
  result: PublicGetCurrencyResultSchema;
}
export interface PublicGetCurrencyResultSchema {
  asset_cap_and_supply_per_manager: AssetCapAndSupplyPerManager;
  borrow_apy: BorrowApy;
  currency: Currency1;
  market_type: MarketType;
  spot_price: SpotPrice;
  spot_price_24h?: SpotPrice_24H;
  srm_im_discount: SrmImDiscount;
  srm_mm_discount: SrmMmDiscount;
  supply_apy: SupplyApy;
  total_borrow: TotalBorrow;
  total_supply: TotalSupply;
}
/**
 * Asset caps and total supply by manager (USDC not split by manager)
 */
export interface AssetCapAndSupplyPerManager {
  [k: string]: AssetCapAndSupplyPerManager1;
}
