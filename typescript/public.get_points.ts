/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Get all points for user across all programs. This request is cached in WSGI.
 */
export type PublicGetPoints = PublicGetPointsJSONRPCSchema;
export type HttpMethod = "GET";
export type Method = "public/get_points";
/**
 * Program for which to count points
 */
export type Program = string;
/**
 * Wallet address of the user
 */
export type Wallet = string;
/**
 * Flag user for special treatment
 */
export type Flag = string;
/**
 * Wallet address of referrer
 */
export type Parent = string;
/**
 * Deprecated
 */
export type PercentShareOfPoints = string;
export type Points1 = string;
/**
 * Total $ notional volume traded by the user in program
 */
export type TotalNotionalVolume = string;
/**
 * Deprecated
 */
export type TotalUsers = number;
/**
 * Deprecated
 */
export type UserRank = number | null;

export interface PublicGetPointsJSONRPCSchema {
  request: PublicGetPointsRequestSchema;
  response: PublicGetPointsResponseSchema;
}
export interface PublicGetPointsRequestSchema {
  httpMethod: HttpMethod;
  id?: string | number;
  method: Method;
  params: PublicGetPointsParamsSchema;
}
export interface PublicGetPointsParamsSchema {
  program: Program;
  wallet: Wallet;
}
export interface PublicGetPointsResponseSchema {
  id: string | number;
  result: PublicGetPointsResultSchema;
}
export interface PublicGetPointsResultSchema {
  flag: Flag;
  parent: Parent;
  percent_share_of_points: PercentShareOfPoints;
  points: Points;
  total_notional_volume: TotalNotionalVolume;
  total_users: TotalUsers;
  user_rank: UserRank;
}
/**
 * Points earned per category
 */
export interface Points {
  [k: string]: Points1;
}
