/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Transfer ERC20 assets from one subaccount to another (e.g. USDC or ETH).<br /><br />For transfering positions (e.g. options or perps), use `private/transfer_position` instead.
 * Required minimum session key permission level is `admin`
 */
export type PrivateTransferErc20 = PrivateTransferErc20JSONRPCSchema;
export type HttpMethod = "POST";
export type Method = "private/transfer_erc20";
/**
 * Unique nonce defined as <UTC_timestamp in ms><random_number_up_to_6_digits> (e.g. 1695836058725001, where 001 is the random number)
 */
export type Nonce = number;
/**
 * Ethereum signature of the transfer
 */
export type Signature = string;
/**
 * Unix timestamp in seconds. Expiry MUST be >5min from now
 */
export type SignatureExpirySec = number;
/**
 * Ethereum wallet address that is signing the transfer
 */
export type Signer = string;
/**
 * Subaccount_id of the recipient
 */
export type RecipientSubaccountId = number;
/**
 * Subaccount_id
 */
export type SubaccountId = number;
/**
 * Ethereum address of the asset being transferred
 */
export type Address = string;
/**
 * Amount to transfer
 */
export type Amount = string;
/**
 * Sub ID of the asset being transferred
 */
export type SubId = number;
/**
 * `requested`
 */
export type Status = string;
/**
 * Transaction id of the transfer
 */
export type TransactionId = string;

export interface PrivateTransferErc20JSONRPCSchema {
  request: PrivateTransferErc20RequestSchema;
  response: PrivateTransferErc20ResponseSchema;
}
export interface PrivateTransferErc20RequestSchema {
  httpMethod: HttpMethod;
  id?: string | number;
  method: Method;
  params: PrivateTransferErc20ParamsSchema;
}
export interface PrivateTransferErc20ParamsSchema {
  recipient_details: SignatureDetailsSchema;
  recipient_subaccount_id: RecipientSubaccountId;
  sender_details: SignatureDetailsSchema1;
  subaccount_id: SubaccountId;
  transfer: TransferDetailsSchema;
}
/**
 * Details of the recipient
 */
export interface SignatureDetailsSchema {
  nonce: Nonce;
  signature: Signature;
  signature_expiry_sec: SignatureExpirySec;
  signer: Signer;
}
/**
 * Details of the sender
 */
export interface SignatureDetailsSchema1 {
  nonce: Nonce;
  signature: Signature;
  signature_expiry_sec: SignatureExpirySec;
  signer: Signer;
}
/**
 * Transfer details
 */
export interface TransferDetailsSchema {
  address: Address;
  amount: Amount;
  sub_id: SubId;
}
export interface PrivateTransferErc20ResponseSchema {
  id: string | number;
  result: PrivateTransferErc20ResultSchema;
}
export interface PrivateTransferErc20ResultSchema {
  status: Status;
  transaction_id: TransactionId;
}
